include:
  - template: 'Workflows/Branch-Pipelines.gitlab-ci.yml'

variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
    TORCH_HOME: "$CI_PROJECT_DIR/.cache/torch"
    SECML_HOME_DIR: "$CI_PROJECT_DIR/secml-data"
    # To avoid waiting indefinitely due to opened matplotlib figures
    MPLBACKEND: Agg

stages:
  - test
  - release


.shared_windows_runners:
  tags:
  - shared-windows
  - windows
  - windows-1809


.test-cache:
  cache: &test-cache
    paths:
      - $PIP_CACHE_DIR
      - $TORCH_HOME
      - $SECML_HOME_DIR

.test-cache-py36:
  cache: &test-cache-py36
    key: "test-cache-py36"
    <<: *test-cache

.test-cache-py36-win:
  cache: &test-cache-py36-win
    key: "test-cache-py36-win"
    <<: *test-cache

.test-cache-py37:
  cache: &test-cache-py37
    key: "test-cache-py37"
    <<: *test-cache

.test-cache-py38:
  cache: &test-cache-py38
    key: "test-cache-py38"
    <<: *test-cache


.test:
  stage: test
  interruptible: true
  before_script:
    - echo $CI_PROJECT_DIR
    - echo $SECML_ZOO_BRANCH
    - python -V
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install pytest>=5
  script:
    - pip install -r requirements.txt
    - py.test models/ --junitxml=pytest-report.xml
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_COMMIT_BRANCH !~ /^v.*/'
      variables:
        SECML_ZOO_BRANCH: $CI_COMMIT_BRANCH
    - when: on_success

.test-report:
  artifacts: &pytest-report
    reports:
      junit: pytest-report.xml
    expire_in: 1 week

test:py36:
  extends: .test
  image: python:3.6
  cache: *test-cache-py36
  artifacts: *pytest-report

test:py37:
  extends: .test
  image: python:3.7
  cache: *test-cache-py37
  artifacts: *pytest-report

test:py38:
  extends: .test
  image: python:3.8
  cache: *test-cache-py38
  artifacts: *pytest-report

test:py36:win:
  extends:
    - .test
    - .shared_windows_runners
  image: python:3.6
  variables:
    PIP_FIND_LINKS: "https://download.pytorch.org/whl/cpu/torch_stable.html"
  before_script:
    - echo $CI_PROJECT_DIR
    - echo $SECML_ZOO_BRANCH
    - choco install vcredist2017 -y
    - choco install python -y --version=3.6.8
    # Path is not updated by default by choco
    - $env:Path += ";C:\Python36;C:\Python36\Scripts"
    - python -V
    # If matplotlib cannot find the following registry item tries to read the "WINDIR" env key (caps) and crashes
    - New-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders" -Name "Fonts" -Value "C:\Windows\Fonts" -PropertyType "String"
    # The https://download.pytorch.org/ certificates chain is not recognized by default as trusted
    - Import-Certificate -FilePath ".gitlab\dl-pytorch-chain.p7b" -CertStoreLocation Cert:\LocalMachine\Root
    - pip install virtualenv
    - virtualenv venv
    - venv\Scripts\activate
    - pip install pytest>=5
  allow_failure: true
  cache: *test-cache-py36-win
  artifacts: *pytest-report


.release:
  stage: release
  image: ${CI_REGISTRY}/pralab/docker-helper-images/alpine-release:latest
  only:
    variables:
      - $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $RELEASE  # Should be set to "vX.Y.Z" (without quotes)

release:zoo:
  extends: .release
  before_script:
    - echo $CI_PROJECT_ID
    - echo $CI_DEFAULT_BRANCH
    - echo $RELEASE
  script:
    - RELEASE=$(echo $RELEASE | ( IFS=".$IFS" ; read a b c && echo ${a:1}.$b ))  # Use Major.Minor only
    - 'curl --request PUT --header "PRIVATE-TOKEN: $API_ACCESS_TOKEN" --header "Content-Type: application/json"
      --data "{\"branch\": \"$CI_DEFAULT_BRANCH\", \"content\": \"git+https://gitlab.com/secml/secml#egg=secml[pytorch] >= $RELEASE.dev0\", \"commit_message\": \"Updated requirements.txt for version $RELEASE\"}"
      "$CI_PROJECT_DOMAIN/api/v4/projects/$CI_PROJECT_ID/repository/files/requirements.txt"'
    - 'curl --request POST --header "PRIVATE-TOKEN: $API_ACCESS_TOKEN"
      "$CI_PROJECT_DOMAIN/api/v4/projects/$CI_PROJECT_ID/repository/branches?branch=v$RELEASE&ref=$CI_DEFAULT_BRANCH"'
    - 'curl --request PUT --header "PRIVATE-TOKEN: $API_ACCESS_TOKEN" --header "Content-Type: application/json"
      --data "{\"branch\": \"v$RELEASE\", \"content\": \"secml[pytorch] ~= $RELEASE.0\", \"commit_message\": \"Release v$RELEASE\"}"
      "$CI_PROJECT_DOMAIN/api/v4/projects/$CI_PROJECT_ID/repository/files/requirements.txt"'
